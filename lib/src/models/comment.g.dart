// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'comment.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

Comment _$CommentFromJson(Map<String, dynamic> json) {
  return Comment(
    id: json['id'] as int?,
    post_id: json['post_id'] as int?,
    category: json['category'] as String,
    parent_author: json['parent_author'] as String,
    parent_permlink: json['parent_permlink'] as String,
    author: json['author'] as String,
    permlink: json['permlink'] as String,
    title: json['title'] as String,
    body: json['body'] as String,
    json_metadata: json['json_metadata'] as String,
    last_update: json['last_update'] as String,
    created: json['created'] as String,
    active: json['active'] as String?,
    last_payout: json['last_payout'] as String,
    depth: json['depth'] as int,
    children: json['children'] as int,
    net_rshares: json['net_rshares'],
    abs_rshares: json['abs_rshares'],
    vote_rshares: json['vote_rshares'],
    children_abs_rshares: json['children_abs_rshares'],
    cashout_time: json['cashout_time'] as String,
    max_cashout_time: json['max_cashout_time'] as String?,
    total_vote_weight: json['total_vote_weight'] as int?,
    reward_weight: json['reward_weight'] as int?,
    total_payout_value: json['total_payout_value'] as String,
    curator_payout_value: json['curator_payout_value'] as String,
    author_rewards: json['author_rewards'],
    net_votes: json['net_votes'] as int?,
    root_comment: json['root_comment'] as int?,
    max_accepted_payout: json['max_accepted_payout'] as String,
    percent_steem_dollars: json['percent_steem_dollars'] as int,
    allow_replies: json['allow_replies'] as bool?,
    allow_votes: json['allow_votes'] as bool?,
    allow_curation_rewards: json['allow_curation_rewards'] as bool?,
    beneficiaries: (json['beneficiaries'] as List<dynamic>)
        .map((e) => BeneficiaryRoute.fromJson(e as Map<String, dynamic>))
        .toList(),
  );
}

Map<String, dynamic> _$CommentToJson(Comment instance) => <String, dynamic>{
      'id': instance.id,
      'post_id': instance.post_id,
      'category': instance.category,
      'parent_author': instance.parent_author,
      'parent_permlink': instance.parent_permlink,
      'author': instance.author,
      'permlink': instance.permlink,
      'title': instance.title,
      'body': instance.body,
      'json_metadata': instance.json_metadata,
      'last_update': instance.last_update,
      'created': instance.created,
      'active': instance.active,
      'last_payout': instance.last_payout,
      'depth': instance.depth,
      'children': instance.children,
      'net_rshares': instance.net_rshares,
      'abs_rshares': instance.abs_rshares,
      'vote_rshares': instance.vote_rshares,
      'children_abs_rshares': instance.children_abs_rshares,
      'cashout_time': instance.cashout_time,
      'max_cashout_time': instance.max_cashout_time,
      'total_vote_weight': instance.total_vote_weight,
      'reward_weight': instance.reward_weight,
      'total_payout_value': instance.total_payout_value,
      'curator_payout_value': instance.curator_payout_value,
      'author_rewards': instance.author_rewards,
      'net_votes': instance.net_votes,
      'root_comment': instance.root_comment,
      'max_accepted_payout': instance.max_accepted_payout,
      'percent_steem_dollars': instance.percent_steem_dollars,
      'allow_replies': instance.allow_replies,
      'allow_votes': instance.allow_votes,
      'allow_curation_rewards': instance.allow_curation_rewards,
      'beneficiaries': instance.beneficiaries,
    };

Discussion _$DiscussionFromJson(Map<String, dynamic> json) {
  return Discussion(
    url: json['url'] as String,
    root_title: json['root_title'] as String,
    pending_payout_value: json['pending_payout_value'] as String,
    total_pending_payout_value: json['total_pending_payout_value'] as String?,
    active_votes: json['active_votes'] as List<dynamic>?,
    replies:
        (json['replies'] as List<dynamic>).map((e) => e as String).toList(),
    author_reputation: json['author_reputation'] as int,
    promoted: json['promoted'] as String,
    body_length: json['body_length'] as int,
    reblogged_by: json['reblogged_by'] as List<dynamic>?,
    first_reblogged_by: json['first_reblogged_by'],
    first_reblogged_on: json['first_reblogged_on'],
    id: json['id'],
    post_id: json['post_id'],
    category: json['category'],
    parent_author: json['parent_author'],
    parent_permlink: json['parent_permlink'],
    author: json['author'],
    permlink: json['permlink'],
    title: json['title'],
    body: json['body'],
    json_metadata: json['json_metadata'],
    last_update: json['last_update'],
    created: json['created'],
    active: json['active'],
    last_payout: json['last_payout'],
    depth: json['depth'],
    children: json['children'],
    net_rshares: json['net_rshares'],
    abs_rshares: json['abs_rshares'],
    vote_rshares: json['vote_rshares'],
    children_abs_rshares: json['children_abs_rshares'],
    cashout_time: json['cashout_time'],
    max_cashout_time: json['max_cashout_time'],
    total_vote_weight: json['total_vote_weight'],
    reward_weight: json['reward_weight'],
    total_payout_value: json['total_payout_value'],
    curator_payout_value: json['curator_payout_value'],
    author_rewards: json['author_rewards'],
    net_votes: json['net_votes'],
    root_comment: json['root_comment'],
    max_accepted_payout: json['max_accepted_payout'],
    percent_steem_dollars: json['percent_steem_dollars'],
    allow_replies: json['allow_replies'],
    allow_votes: json['allow_votes'],
    allow_curation_rewards: json['allow_curation_rewards'],
    beneficiaries: (json['beneficiaries'] as List<dynamic>)
        .map((e) => BeneficiaryRoute.fromJson(e as Map<String, dynamic>))
        .toList(),
  );
}

Map<String, dynamic> _$DiscussionToJson(Discussion instance) =>
    <String, dynamic>{
      'id': instance.id,
      'post_id': instance.post_id,
      'category': instance.category,
      'parent_author': instance.parent_author,
      'parent_permlink': instance.parent_permlink,
      'author': instance.author,
      'permlink': instance.permlink,
      'title': instance.title,
      'body': instance.body,
      'json_metadata': instance.json_metadata,
      'last_update': instance.last_update,
      'created': instance.created,
      'active': instance.active,
      'last_payout': instance.last_payout,
      'depth': instance.depth,
      'children': instance.children,
      'net_rshares': instance.net_rshares,
      'abs_rshares': instance.abs_rshares,
      'vote_rshares': instance.vote_rshares,
      'children_abs_rshares': instance.children_abs_rshares,
      'cashout_time': instance.cashout_time,
      'max_cashout_time': instance.max_cashout_time,
      'total_vote_weight': instance.total_vote_weight,
      'reward_weight': instance.reward_weight,
      'total_payout_value': instance.total_payout_value,
      'curator_payout_value': instance.curator_payout_value,
      'author_rewards': instance.author_rewards,
      'net_votes': instance.net_votes,
      'root_comment': instance.root_comment,
      'max_accepted_payout': instance.max_accepted_payout,
      'percent_steem_dollars': instance.percent_steem_dollars,
      'allow_replies': instance.allow_replies,
      'allow_votes': instance.allow_votes,
      'allow_curation_rewards': instance.allow_curation_rewards,
      'beneficiaries': instance.beneficiaries,
      'url': instance.url,
      'root_title': instance.root_title,
      'pending_payout_value': instance.pending_payout_value,
      'total_pending_payout_value': instance.total_pending_payout_value,
      'active_votes': instance.active_votes,
      'replies': instance.replies,
      'author_reputation': instance.author_reputation,
      'promoted': instance.promoted,
      'body_length': instance.body_length,
      'reblogged_by': instance.reblogged_by,
      'first_reblogged_by': instance.first_reblogged_by,
      'first_reblogged_on': instance.first_reblogged_on,
    };

BeneficiaryRoute _$BeneficiaryRouteFromJson(Map<String, dynamic> json) {
  return BeneficiaryRoute(
    account: json['account'] as String,
    weight: json['weight'] as int,
  );
}

Map<String, dynamic> _$BeneficiaryRouteToJson(BeneficiaryRoute instance) =>
    <String, dynamic>{
      'account': instance.account,
      'weight': instance.weight,
    };
